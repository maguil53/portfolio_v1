// Remember that you can access certain variables because in main.scss (Your main sass file)
// because you're importing "config", which is the file where you create all your variables
header {
  background: $navbar-color;
  position: fixed;
  text-align: center;
  z-index: 999;
  width: 100%;
  color: set-text-color($navbar-color);

  // Using this to move Logo to left side of page
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
}

.blurry-background {
  position: absolute;
  z-index: -1;
  height: 80px;
  width: 100%;
  background: black;
  filter: blur(8px);

  transition: filter 250ms ease-in-out;
}

.logo {
  // Matching margin of hamburger on the right
  margin-left: 1em;
}

// Initially, this is hidden from the user (Hence scale(0,1).)
nav {
  background: #262626;
  position: absolute;
  right: 0;
  height: 100vh;
  // We're going to change this width size for tablets
  width: 65vw;
  text-align: left;
  transform: scale(0, 1);
  transform-origin: right;
  transition: transform 150ms ease-in-out;
  z-index: 10;

  display: flex;
  justify-content: center;
  align-items: center;

  ul {
    margin: 0;
    padding: 0;
    list-style: none;
  }

  li {
    margin-bottom: 3em;
    margin-left: 1em;
  }

  a {
    color: set-text-color($navbar-color);
    font-size: 1.2rem;
    text-decoration: none;
  }
}

// Gets rid of checkbox
.nav-toggle {
  display: none;
}

// Will expand navbar items when our .nav-toggle is checked
.nav-toggle:checked ~ nav {
  transform: scale(1, 1);
  opacity: 1;
}

.nav-toggle-label {
  /* This will remove label outside the normal flow of the document and is positioned
      relative to it's parent (In this case it's the "header" element).  */
  position: absolute;
  margin: 0;
  padding-left: 2em;
  top: 0;
  right: 0;
  width: 100px;
  // Will make sure hamburger is on top of nav links
  z-index: 20;

  height: 100%;
  /* Using flex-box just because it'll make it easier to center our label (vertically) after
    we set height to 100% */
  display: flex;
  align-items: center;
}

.nav-toggle-label span,
.nav-toggle-label span::before,
.nav-toggle-label span::after {
  display: block;
  background: white;
  height: 2px;
  width: 2em;
  border-radius: 2px;
  position: relative;
}

// Makes 3 lines visible (by setting content to "")
.nav-toggle-label span::before,
.nav-toggle-label span::after {
  content: "";
  position: absolute;
}

// .nav-toggle-label span::before {
//   bottom: 7px;
// }

// .nav-toggle-label span::after {
//   top: 7px;
// }

.nav-toggle:checked + label > span {
  transform: rotate(-45deg);
  @include easeInOut;
}

.nav-toggle:not(:checked) + label > span {
  transform: rotate(deg);
  @include easeInOut;
}

// YES!!!!! We can use CSS selectors to modify psuedo elements that make up the hamburger!
// And since we're using psuedo elements we still have less markup!
.nav-toggle:checked + label > span::before {
  bottom: 0;
  transform: rotate(-180deg);

  @include easeInOut;
}

.nav-toggle:not(:checked) + label > span::before {
  bottom: 7px;
  transform: rotate(0deg);

  @include easeInOut;
}

.nav-toggle:checked + label > span::after {
  top: 0;
  transform: rotate(-270deg);

  @include easeInOut;
}

.nav-toggle:not(:checked) + label > span::after {
  top: 7px;
  transform: rotate(0deg);

  @include easeInOut;
}
