@import "config";
@import "navbar";

// Define the main colors for your layout in a "_config.scss" file
// (along with your media queries and mixins). Don't forget to import this file before
// anything else.

*,
*::before,
*::after {
  box-sizing: border-box;
}

body,
html {
  height: 100%;
  width: 100%;
  margin: 0;
  // background: #fff;
  background: $background-gradient;
  // background: linear-gradient(to bottom right, #1afba5, #41acff);
  font-family: "Courier New", Courier, monospace;
}

// Initially, this class is not assigned to any element
.blur-glass {
  filter: blur(8px);
  transition: filter 250ms ease-in-out;
}

.unblur-glass {
  filter: blur(0);
  transition: filter 250ms ease-in-out;
}

// navbar (Start)
header {
  background: $navbar-color;
  position: fixed;
  text-align: center;
  z-index: 999;
  width: 100%;
  color: set-text-color($navbar-color);

  // Using this to move Logo to left side of page
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
}

.blurry-background {
  position: absolute;
  z-index: -1;
  height: 80px;
  width: 100%;
  background: black;
  filter: blur(8px);

  transition: filter 250ms ease-in-out;
}

.logo {
  // Matching margin of hamburger on the right
  margin-left: 68px;
  // position: relative;
  // z-index: 10;
}

nav {
  background: #262626;
  position: absolute;
  right: 0;
  height: 100vh;
  width: 50vw;
  text-align: left;
  transform: scale(1, 0);
  z-index: 10;

  ul {
    margin: 0;
    padding: 0;
    list-style: none;
  }

  a {
    color: set-text-color($navbar-color);
    text-decoration: none;
  }
}

// Gets rid of checkbox
.nav-toggle {
  display: none;
}

// Will expand navbar items when our .nav-toggle is checked
.nav-toggle:checked ~ nav {
  transform: scale(1, 1);
}

// Use css selector to blur background when user view nav links
.nav-toggle:checked {
}

.nav-toggle-label {
  /* This will remove label outside the normal flow of the document and is positioned
    relative to it's parent (In this case it's the "header" element).  */
  position: absolute;
  margin: 0;
  top: 0;
  right: 0;
  width: 100px;
  // Will make sure hamburger is on top of nav links
  z-index: 20;

  height: 100%;
  /* Using flex-box just because it'll make it easier to center our label (vertically) after
  we set height to 100% */
  display: flex;
  align-items: center;
}

.nav-toggle-label span,
.nav-toggle-label span::before,
.nav-toggle-label span::after {
  display: block;
  background: white;
  height: 2px;
  width: 2em;
  border-radius: 2px;
  position: relative;
}

// Makes 3 lines visible (by setting content to "")
.nav-toggle-label span::before,
.nav-toggle-label span::after {
  content: "";
  position: absolute;
}

.nav-toggle-label span::before {
  bottom: 7px;
}

.nav-toggle-label span::after {
  top: 7px;
}

// navbar (End)

.portrait {
  width: 250px;
  height: 250px;
  // Remember our css file will be in dist/css so your path must be defined carefully
  background: url("../img/portrait.jpg");
  background-size: cover;
  // Making a circle for image
  border-radius: 50%;
  background-repeat: no-repeat;
}

h1 {
  font-size: 2em;
}

.container {
  display: grid;

  align-items: center;
  justify-content: center;
  font-size: 50px;

  height: 100%;
}

// Made relative so we can make ::before and ::after absolute and move elements RELATIVE to .main div
.main {
  position: relative;
  // height: 100vh;
}

.animated {
  -webkit-animation-duration: 1s;
  animation-duration: 1s;
  -webkit-animation-fill-mode: both;
  animation-fill-mode: both;
}

// Using mixin to generate 2 keyframes, 1 need for vendor-prefix (same exact values)
@mixin keyframes($animationName) {
  @-webkit-keyframes #{$animationName} {
    @content;
  }
  @keyframes #{$animationName} {
    @content;
  }
}

@include keyframes(bounceInDown) {
  0%,
  60%,
  75%,
  90%,
  100% {
    -webkit-transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
    transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
  }

  0% {
    opacity: 0;
    -webkit-transform: translate3d(0, -5000px, 0);
    transform: translate3d(0, -5000px, 0);
  }
  60% {
    opacity: 1;
    -webkit-transform: translate3d(0, 25px, 0);
    transform: translate3d(0, 25px, 0);
  }
  75% {
    -webkit-transform: translate3d(0, -10px, 0);
    transform: translate3d(0, -10px, 0);
  }
  90% {
    -webkit-transform: translate3d(0, 5px, 0);
    transform: translate3d(0, 5px, 0);
  }
  100% {
    -webkit-transform: none;
    transform: none;
  }
}

// Animations will begin as soon as page is loaded,
// If you want animation to begin as soon as you reach a certain point on a page,
// then look into jquery "waypoints"
.main-attraction {
  -webkit-animation-name: bounceInDown;
  animation-name: bounceInDown;
}

@import "media-queries";
